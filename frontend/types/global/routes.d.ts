/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/artist/[itemId]': RouteRecordInfo<'/artist/[itemId]', '/artist/:itemId', { itemId: ParamValue<true> }, { itemId: ParamValue<false> }>,
    '/genre/[itemId]': RouteRecordInfo<'/genre/[itemId]', '/genre/:itemId', { itemId: ParamValue<true> }, { itemId: ParamValue<false> }>,
    '/item/[itemId]': RouteRecordInfo<'/item/[itemId]', '/item/:itemId', { itemId: ParamValue<true> }, { itemId: ParamValue<false> }>,
    '/library/[itemId]': RouteRecordInfo<'/library/[itemId]', '/library/:itemId', { itemId: ParamValue<true> }, { itemId: ParamValue<false> }>,
    '/metadata': RouteRecordInfo<'/metadata', '/metadata', Record<never, never>, Record<never, never>>,
    '/musicalbum/[itemId]': RouteRecordInfo<'/musicalbum/[itemId]', '/musicalbum/:itemId', { itemId: ParamValue<true> }, { itemId: ParamValue<false> }>,
    '/person/[itemId]': RouteRecordInfo<'/person/[itemId]', '/person/:itemId', { itemId: ParamValue<true> }, { itemId: ParamValue<false> }>,
    '/playback/music': RouteRecordInfo<'/playback/music', '/playback/music', Record<never, never>, Record<never, never>>,
    '/playback/video': RouteRecordInfo<'/playback/video', '/playback/video', Record<never, never>, Record<never, never>>,
    '/search': RouteRecordInfo<'/search', '/search', Record<never, never>, Record<never, never>>,
    '/series/[itemId]': RouteRecordInfo<'/series/[itemId]', '/series/:itemId', { itemId: ParamValue<true> }, { itemId: ParamValue<false> }>,
    '/server/add': RouteRecordInfo<'/server/add', '/server/add', Record<never, never>, Record<never, never>>,
    '/server/login': RouteRecordInfo<'/server/login', '/server/login', Record<never, never>, Record<never, never>>,
    '/server/select': RouteRecordInfo<'/server/select', '/server/select', Record<never, never>, Record<never, never>>,
    '/settings/': RouteRecordInfo<'/settings/', '/settings', Record<never, never>, Record<never, never>>,
    '/settings/apikeys': RouteRecordInfo<'/settings/apikeys', '/settings/apikeys', Record<never, never>, Record<never, never>>,
    '/settings/devices': RouteRecordInfo<'/settings/devices', '/settings/devices', Record<never, never>, Record<never, never>>,
    '/settings/logs-and-activity': RouteRecordInfo<'/settings/logs-and-activity', '/settings/logs-and-activity', Record<never, never>, Record<never, never>>,
    '/settings/server': RouteRecordInfo<'/settings/server', '/settings/server', Record<never, never>, Record<never, never>>,
    '/settings/subtitles': RouteRecordInfo<'/settings/subtitles', '/settings/subtitles', Record<never, never>, Record<never, never>>,
    '/settings/users/': RouteRecordInfo<'/settings/users/', '/settings/users', Record<never, never>, Record<never, never>>,
    '/settings/users/[id]': RouteRecordInfo<'/settings/users/[id]', '/settings/users/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/settings/users/new': RouteRecordInfo<'/settings/users/new', '/settings/users/new', Record<never, never>, Record<never, never>>,
    '/wizard': RouteRecordInfo<'/wizard', '/wizard', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/artist/[itemId].vue': {
      routes: '/artist/[itemId]'
      views: never
    }
    'src/pages/genre/[itemId].vue': {
      routes: '/genre/[itemId]'
      views: never
    }
    'src/pages/item/[itemId].vue': {
      routes: '/item/[itemId]'
      views: never
    }
    'src/pages/library/[itemId].vue': {
      routes: '/library/[itemId]'
      views: never
    }
    'src/pages/metadata.vue': {
      routes: '/metadata'
      views: never
    }
    'src/pages/musicalbum/[itemId].vue': {
      routes: '/musicalbum/[itemId]'
      views: never
    }
    'src/pages/person/[itemId].vue': {
      routes: '/person/[itemId]'
      views: never
    }
    'src/pages/playback/music.vue': {
      routes: '/playback/music'
      views: never
    }
    'src/pages/playback/video.vue': {
      routes: '/playback/video'
      views: never
    }
    'src/pages/search.vue': {
      routes: '/search'
      views: never
    }
    'src/pages/series/[itemId].vue': {
      routes: '/series/[itemId]'
      views: never
    }
    'src/pages/server/add.vue': {
      routes: '/server/add'
      views: never
    }
    'src/pages/server/login.vue': {
      routes: '/server/login'
      views: never
    }
    'src/pages/server/select.vue': {
      routes: '/server/select'
      views: never
    }
    'src/pages/settings/index.vue': {
      routes: '/settings/'
      views: never
    }
    'src/pages/settings/apikeys.vue': {
      routes: '/settings/apikeys'
      views: never
    }
    'src/pages/settings/devices.vue': {
      routes: '/settings/devices'
      views: never
    }
    'src/pages/settings/logs-and-activity.vue': {
      routes: '/settings/logs-and-activity'
      views: never
    }
    'src/pages/settings/server.vue': {
      routes: '/settings/server'
      views: never
    }
    'src/pages/settings/subtitles.vue': {
      routes: '/settings/subtitles'
      views: never
    }
    'src/pages/settings/users/index.vue': {
      routes: '/settings/users/'
      views: never
    }
    'src/pages/settings/users/[id].vue': {
      routes: '/settings/users/[id]'
      views: never
    }
    'src/pages/settings/users/new.vue': {
      routes: '/settings/users/new'
      views: never
    }
    'src/pages/wizard.vue': {
      routes: '/wizard'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
